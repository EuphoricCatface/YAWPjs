@import "helpers";

$field-width: 600px;
// leaving width as 600px as this is going to be 5x5 board, not 4x4
$grid-spacing: 30px;
$grid-row-cells: 5;
$tile-size: calc(($field-width - $grid-spacing * ($grid-row-cells)) / $grid-row-cells);
$tile-border-radius: calc($tile-size / 5);
$tile-border-sub-radius: 3px;

$tile-font-size: calc(($tile-size - $tile-border-radius) / 2);
$tile-score-font-size: calc($tile-font-size * 2/3);
$tile-bonus-font-size: calc($tile-font-size * 1/2);

$text-color: #776e65;
$bright-text-color: #f9f6f2;
$tile-color: #eee4da;
$tile-color-selected: #c0b9b1;

$intro-height: 160px;

$transition-speed: 800ms;// * 2; // testing
// Rough approximation
$OutCubic: cubic-bezier(0.4, 1, 0.66, 1);

html, body {
    margin: 0;
    padding: 0;

    background: #faf8ef;
    color: $text-color;
    font-family:Arial, Helvetica, sans-serif;
    font-size: 18px;
}

body {
    margin: 20px 0;
}

h1 {
    font-size: 40px;
    font-weight: bold;
    margin: 0;
}

.container {
    width: $field-width;
    margin: 0 auto;
}

@include keyframes(fade-in) {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

p {
    margin-top: 0;
    margin-bottom: 10px;
    line-height: 1.65;
}

a {
    color: $text-color;
    font-weight: bold;
    text-decoration: underline;
}

strong {
    &.important {
        text-transform: uppercase;
    }
}

code {
    font-size: 15px;
    background-color: rgba(lightgray, 50%);
}

hr {
    border: none;
    border-bottom: 1px solid lighten($text-color, 40%);
    margin-top: 20px;
    margin-bottom: 30px;
}

.game-intro {
    position: relative;
    float: left;
    width: calc($field-width * 3 / 5);
    height: $intro-height;
    margin-bottom: 10px;

    & .game-intro-explanation {
        position: absolute;
        bottom: 0;
        margin-bottom: 0;
    }
}

.game-intro-side, .turn-info, .game-container {
    overflow: hidden;
    position: relative;
    padding: calc($grid-spacing / 2);
    margin-bottom: 10px;
    border-radius: $tile-border-radius;
    
    cursor: default;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;

    background: #bbada0;
    box-sizing: border-box;
}

.game-intro-side {
    float: right;
    padding: 10px 12px;
    width: calc($field-width * 2 / 5  - $grid-spacing / 2);
    height: $intro-height;

    &>*>* {
        position: relative;
        height: 65px;
        margin-bottom: calc(10px);
        font-weight: bold;
        border-radius: $tile-border-radius;
        background: rgba($tile-color, .35);
        text-align: center;
    }
    &>.game-meta {
        float: left;
        width: 65px;
        
        &>* {
            background-color: $tile-color;
            line-height: 65px;
            font-size: 35px;
            &:before {
                position: absolute;
                width: 100%;
                top: 5px;
                left: 0;
                color: $bright-text-color;
                text-align: center;
                font-size: 20px;
                line-height: 20px;
            }
        }
    }
    &>.game-info {
        float: right;
        width: calc($field-width * 2 / 5 - 60px - $grid-spacing * 2);

        font-size: 25px;
        line-height: 80px;
        &>*:before {
            position: absolute;
            width: 100%;
            top: 5px;
            left: 0;
            color: $bright-text-color;
            text-align: center;
            font-size: 20px;
            line-height: 20px;
        }
    }
    & .score-total-container::before { 
        content:"Score"
    }
    & .turns-container::before { 
        content:"Turns"
    }
}

.turn-info {
    width: $field-width;
    height: calc($tile-size / 2 + $grid-spacing);
    .word-construct-container, & .calculation-container strong {
        font-size: calc($tile-size / 3);
        line-height: calc($tile-size / 2);
    }
    .calculation-container {
        float: right;
        color: $bright-text-color;
    }

    .word-construct-container {
        padding: 0px 10px;
        background-color: $tile-color;
        font-family: monospace;
        width: calc($field-width * 3 / 5) - $grid-spacing;
        height: calc($tile-size / 2);
        overflow: hidden;
        float: left;
        padding: 0 10px;
        &:after{ float:right; opacity: 0.5; }
        &.valid::after { content: "✔️" }
        &.invalid::after { content: "❌" }
        &.finish-select:after { opacity: 1; }
        &.hide-validity:after { visibility: hidden; }
    }
}

.tile.construct {
    display: inline-block;
    border-radius: 3px;
    width: 1ch;
    height: 1.6ch;
    line-height: 1.5ch;
    margin-right: 1px;
    &.double-letter {
        background-color: #0000ff3f;
    }
    &.triple-letter {
        background-color: #ff00003f;
    }
    &.double-word {
        font-weight: bold;
        color: #3b3bffbf;
    }
    &.triple-word {
        font-weight: bold;
        color: #ff3b3bbf;
    }
}

.game-container {
    margin-top: 10px;
    width: $field-width;
    height: $field-width;
    border-radius: $tile-border-radius * 1.5;
    
    touch-action: none;

    & .loading, & .game-over {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: block;
        text-align: center;
        height: $field-width;
        line-height: $field-width;
        z-index: 100;
        font-size: 60px;
        font-weight: bold;
    }

    & .game-over {
        background: rgba($tile-color, .75);
        text-align: center;
        visibility: hidden;
        
        &.show {
            visibility: visible;
            @include animation(fade-in $transition-speed ease calc($transition-speed / 2));
            @include animation-fill-mode(both);
        }
    }
    & .loading {
        color: $tile-color;
        background: rgba($text-color, .5);

        &.loaded {
            visibility: hidden;
            opacity: 0;
            transition: visibility 0s .5s, opacity .5s linear;
        }
    }
}

.grid-container {
    position: absolute;
    z-index: 1;

    .grid-row {
        margin-bottom: $grid-spacing;

        &:last-child {
            margin-bottom: 0;
        }

        &:after {
            content: "";
            display: block;
            clear: both;
        }
    }

    .grid-row .grid-cell {
        width: $tile-size;
        height: $tile-size;
        margin-right: $grid-spacing;
        float: left;

        border-radius: $tile-border-radius;

        background: rgba($tile-color, .35);

        &:last-child {
            margin-right: 0;
        }
    }
}

.tile-container {
    position: absolute;
    z-index: 2;
}

.tile-container .tile {
    background: red;
    width: $tile-size;
    height: $tile-size;
    border-radius: $tile-border-radius;
    background: $tile-color;
    text-align: center;
    line-height: $tile-size;
    font-size: $tile-font-size;
    font-weight: bold;
  
    touch-action: none;

    @include transition($transition-speed $OutCubic);
    @include transition-property(top, left);

    // Columns don't interact between each other. Let's treat each column as a list
    // The first column is on the left, and the first element is at the bottom
    @for $x from 1 through $grid-row-cells {
        @for $y from 1 through $grid-row-cells * 2 {
            &.tile-position-#{$x}-#{($y)} {
                position: absolute;
                left: ($tile-size + $grid-spacing) * ($x - 1);
                top: ($tile-size + $grid-spacing) * ($grid-row-cells - $y);
            }
        }
    }

    &>.tileScore {
        line-height: initial;
        display: block;
        position: absolute;
        font-size: $tile-score-font-size;
        width: 40%;
        height: 40%;
        line-height: calc($tile-size / 3) + 10px;
        left: 0;
        top: 0;
    }

    &.double-word::after {
        content: "DW";
        background-color: rgba(0, 0, 255, 0.500);
        bottom: 0;
        border-radius: $tile-border-sub-radius $tile-border-sub-radius $tile-border-radius $tile-border-sub-radius;
    }

    &.triple-word::after {
        content: "TW";
        background-color: rgba(255, 0, 0, 0.500);
        bottom: 0;
        border-radius: $tile-border-sub-radius $tile-border-sub-radius $tile-border-radius $tile-border-sub-radius;
    }

    &.double-letter::after {
        content: "DL";
        background-color: rgba(0, 0, 255, 0.500);
        top: 0;
        border-radius: $tile-border-sub-radius $tile-border-radius $tile-border-sub-radius $tile-border-sub-radius;
    }

    &.triple-letter::after {
        content: "TL";
        background-color: rgba(255, 0, 0, 0.500);
        top: 0;
        border-radius: $tile-border-sub-radius $tile-border-radius $tile-border-sub-radius $tile-border-sub-radius;
    }

    &:after {
        line-height: initial;
        font-weight: normal;
        color: $bright-text-color;
        display: block;
        position: absolute;
        font-size: $tile-bonus-font-size;
        font-family: monospace;
        width: 33%;
        height: 33%;
        line-height: calc($tile-size / 3);
        right: 0;
    }

    &.selected {
        //background-color: $tile-color-selected;
        background-color: $text-color;
        color: $bright-text-color;
    }
/*
    &.tile-new {
        @include animation(appear $transition-speed ease);
        @include animation-fill-mode(both)
    }
*/
}

/* These do not come out satisfying...
@include keyframes(appear) {
    // Opacity makes it unnecessarily laggy
    0% {
        -webkit-transform: scale(0.33);
        //opacity: 0.5;
    }
    75% {
        -webkit-transform: scale(1);
        //opacity: 1;
    }
}*/

.game-explanation {
    //margin-top: 50px;
    margin-top: 0;
}

ol {
    margin: 0;
}

li {
    margin-bottom: 10px;
}
